generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartInfo {
  id        Int      @id(map: "CartInfo_pk") @default(autoincrement())
  productId Int
  Products  Products @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "CartInfo_fk0")
  Carts     Carts[]
}

model Carts {
  id       Int       @id(map: "Carts_pk") @default(autoincrement())
  userId   Int       @unique
  cartId   Int
  Users    Users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Carts_fk0")
  CartInfo CartInfo  @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Carts_fk1")
  History  History[]
}

model History {
  id       Int      @id(map: "History_pk") @default(autoincrement())
  cartId   Int
  userId   Int
  Carts    Carts    @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "History_fk0")
  UserInfo UserInfo @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "History_fk1")
}

model ProductInfo {
  id          Int      @id(map: "ProductInfo_pk") @default(autoincrement())
  productId   Int
  name        String
  value       Float    @db.Real
  description String
  image       String
  isValid     Boolean
  score       Int
  Products    Products @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ProductInfo_fk0")
}

model Products {
  id          Int           @id(map: "Products_pk") @default(autoincrement())
  createdAt   DateTime      @db.Date
  updatedAt   DateTime      @db.Date
  CartInfo    CartInfo[]
  ProductInfo ProductInfo[]
}

model Sessions {
  id      Int     @id(map: "Sessions_pk") @default(autoincrement())
  userId  Int
  token   String
  isValid Boolean
  Users   Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Sessions_fk0")
}

model UserInfo {
  id      Int       @id(map: "UserInfo_pk") @default(autoincrement())
  userId  Int
  name    String
  phone   String
  photo   String
  History History[]
  Users   Users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "UserInfo_fk0")
}

model Users {
  id       Int        @id(map: "Users_pk") @default(autoincrement())
  email    String     @unique
  password String
  Carts    Carts?
  Sessions Sessions[]
  UserInfo UserInfo[]
}
